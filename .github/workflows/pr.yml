name: Pull Request Workflow

on:
  workflow_dispatch:
  pull_request:

jobs:
  test:
    name: 🐙 Test
    runs-on: ubuntu-latest

    env:
      STORE_PATH: . # will be overwritten by the action

    strategy:
      matrix:
        node-version: [20.x]
        pnpm-version: [8.x]

    steps:
      - name: 𐘌 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Node setup ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⚙️ Pnpm setup ${{ matrix.pnpm-version }}
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: 📁 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 📦 Cache .pnpm-store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.pnpm-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.pnpm-version }}-pnpm-store-

      - name: 🧰 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🤫 Create env file
        run: echo "${{ secrets.CI_ENV_FILE }}" > .env

      - name: 🔮 Type checking
        run: pnpm tsc

      - name: 🎓 Spell checking
        run: pnpm spell

      - name: 🎨 Formatting
        run: pnpm format

      - name: 💫 Linting
        run: pnpm lint

      - name: 🚦 Unit testing
        run: pnpm test

      - name: 👻 Dead code elimination
        run: pnpm knip

      - name: 🏗️ Building
        run: pnpm build
