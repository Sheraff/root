.hero {
	--color: hsl(from var(--accent) h 80% 65%);
	min-height: 50dvh;
	position: relative;
	z-index: 0;
	overflow-x: clip;
	margin-bottom: 200px;
}

.title {
	position: relative;
	overflow: hidden;
	padding: 20dvh 0;
	text-align: center;
	view-timeline: --parent block;

	& > * {
		position: relative;
		z-index: -1;
		animation-name: parallax;
		animation-timeline: --parent;
		animation-range-start: exit 0%;
		animation-range-end: exit 100%;
		animation-fill-mode: both;
		animation-timing-function: linear;
	}

	h1 {
		font-size: 10rem;
		line-height: 1;
	}
}

@keyframes parallax {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(150%);
	}
}

.brands {
	display: grid;
	grid-auto-columns: 1fr;
	grid-auto-flow: column;
	grid-gap: var(--s-3);
	margin: 0 auto;
	max-width: 750px;
	padding: 0 var(--s);
}

.item {
	transition: filter 150ms;
	max-width: 150px;
	&:hover {
		filter: drop-shadow(0 0.4rem 1rem var(--color));
	}
}

.neon {
	opacity: 0.8;
	mix-blend-mode: soft-light;
	margin: 0 auto 100px;
	height: 1px;
	width: 70dvw;
	background: hsl(from var(--color) h 95% 95%);
	position: relative;
	pointer-events: none;
	isolation: isolate;

	&::before {
		content: "";
		position: absolute;
		z-index: -1;
		opacity: 0.2;
		inset: 50%;
		width: 110dvw;
		height: 50dvh;
		transform: translate(-50%, -60%);
		background: no-repeat center / 100%
			radial-gradient(ellipse closest-side at center, var(--color) 0px, transparent 100%);
	}

	&::after {
		content: "";
		position: absolute;
		z-index: -1;
		opacity: 0.2;
		top: 0;
		left: 50%;
		width: 100%;
		height: 70dvh;
		transform: translateX(-50%);
		background: radial-gradient(
			ellipse farthest-side at center top,
			var(--color) -100%,
			transparent 100%
		);
	}
}

.spotlight {
	position: absolute;
	z-index: -1;
	inset: 0;
	opacity: 0.2;

	&::before,
	&::after {
		content: "";
		position: absolute;
		top: 100%;
		left: 0;
		height: 50dvh;
		width: 70dvw;
	}

	&::before {
		transform: translateX(-50%) translateX(0.125px);
		background: conic-gradient(
			from 0deg at center top,
			var(--color) 90deg 235deg,
			transparent 260deg
		);
		mask-image: linear-gradient(-90deg, black 0 50%, transparent 100%),
			linear-gradient(0deg, transparent 0, black 75% 100%);
		mask-composite: intersect;
	}

	&::after {
		transform: translateX(50%) translateX(-0.125px);
		background: conic-gradient(
			from 0deg at center top,
			transparent 0deg 100deg,
			var(--color) 125deg
		);
		mask-image: linear-gradient(90deg, black 0 50%, transparent 100%),
			linear-gradient(0deg, transparent 0, black 75% 100%);
		mask-composite: intersect;
	}
}
