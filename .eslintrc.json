{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"plugins": ["@typescript-eslint", "react-refresh"],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier",
		"plugin:@typescript-eslint/recommended-type-checked",
		"plugin:@typescript-eslint/strict-type-checked",
		"plugin:@typescript-eslint/stylistic-type-checked"
	],
	"ignorePatterns": [
		"node_modules/*",
		"**/node_modules/*",
		"**/.turbo/*",
		"dist/*",
		"client/public/sw*",
		"**/*.js",
		"**/*.map",
		"**/vitest.config.ts.*",
		"**/*.module.css.d.ts",
		"**/*.sql.d.ts"
	],
	"rules": {
		"no-fallthrough": "off",
		"no-constant-condition": "off",
		"no-mixed-spaces-and-tabs": "off",
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{ "fixStyle": "inline-type-imports" }
		],
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/no-invalid-void-type": "off",
		"@typescript-eslint/no-confusing-void-expression": "off",
		"@typescript-eslint/consistent-type-definitions": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-unused-vars": ["error", { "varsIgnorePattern": "^_" }],
		"@typescript-eslint/restrict-template-expressions": "off", // good rule in theory, but doesn't work
		"@typescript-eslint/restrict-plus-operands": "off", // good rule in theory, but doesn't work
		"@typescript-eslint/use-unknown-in-catch-callback-variable": "off",
		"no-empty": "off",
		"react-refresh/only-export-components": ["error", { "allowConstantExport": true }],
		"no-unused-labels": "off",
		"@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
		"no-control-regex": "off",
		"@typescript-eslint/no-dynamic-delete": "off"
	},
	"parserOptions": {
		"project": ["tsconfig.tools.json"]
	},
	"overrides": [
		{
			"files": ["vitest.workspace.ts"],
			"parserOptions": {
				"project": ["tsconfig.tools.json"]
			}
		},
		{
			"files": ["types/*.d.ts"],
			"parserOptions": {
				"project": ["tsconfig.app.json"]
			}
		},
		{
			"files": ["**/*.test.ts"],
			"rules": {
				"@typescript-eslint/no-unsafe-assignment": "off"
			}
		}
	]
}
